{"version":3,"file":"static/js/132.33baf15d.chunk.js","mappings":"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","sources":["webpack://soc_net/./src/components/Profile/Profile.module.css?b512","webpack://soc_net/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://soc_net/./src/components/Profile/MyPost/MyPost.module.css?5bea","webpack://soc_net/./src/components/Profile/MyPost/Post/Post.module.css?5715","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileComponent.jsx","hoc/withAuthRedirectComponent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__TOYUv\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__3yBhv\",\"avatar_box\":\"ProfileInfo_avatar_box__GM48q\",\"aboutMe\":\"ProfileInfo_aboutMe__Nv-rC\",\"contacts\":\"ProfileInfo_contacts__U2SwF\",\"motoImg\":\"ProfileInfo_motoImg__7Basn\",\"avatarImg\":\"ProfileInfo_avatarImg__BKnby\"};","import React, {useState, useEffect} from 'react';\r\n// import Preloader from '../../Common/Preloader/Preloader';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ava from '../../../img/ava.png';\r\n// import ProfileStatus from './ProfileStatus.jsx';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img className={s.motoImg} src='https://img4.goodfon.ru/original/2560x1024/3/db/chernyi-fon-mototsikl-mototsiklist.jpg' alt=\"moto\" />\r\n      </div>\r\n      <div className={s.avatar_box}>\r\n        <div className={s.avatar}>\r\n          {/* <img src='https://i.pinimg.com/originals/cc/9f/1f/cc9f1f361a5504957c816106fff75d21.png' /> */}\r\n          {/* <img className={s.avatarImg} src={props.profile.photos.large} /> */}\r\n          {profile.photos.large ? <img className={s.avatarImg} src={profile.photos.large} alt=\"ava\" /> \r\n          : <img className={s.avatarImg} src={ava} alt=\"ava\" /> }\r\n        </div>\r\n        <div className={s.aboutMe}>\r\n          <h2>{profile.fullName}</h2>\r\n          <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n          {/* <p>Статус: {props.profile.lookingForAJobDescription}</p> */}\r\n          <p>{profile.aboutMe}</p>\r\n          <p>Работа: {profile.contacts.lookingForAJob ? 'В поиске' : 'Есть'}</p>\r\n        </div>\r\n        <ul  className={s.contacts}>\r\n          Contacts\r\n          {profile.contacts.vk ? <li>{profile.contacts.vk}</li> : null}\r\n          {profile.contacts.facebook ? <li>{profile.contacts.facebook}</li> : null}\r\n          {profile.contacts.instagram ? <li>{profile.contacts.instagram}</li> : null}\r\n          {profile.contacts.website ? <li>{profile.contacts.website}</li> : null}\r\n          {profile.contacts.twitter ? <li>{profile.contacts.twitter}</li> : null}\r\n          {profile.contacts.youtube ? <li>{profile.contacts.youtube}</li> : null}\r\n          {profile.contacts.github ? <li>{profile.contacts.github}</li> : null}\r\n          {profile.contacts.mainLink ? <li>{profile.contacts.mainLink}</li> : null}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPost_posts__90WAF\",\"errors\":\"MyPost_errors__2zdy+\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__c1yqt\",\"name_user\":\"Post_name_user__0jAXy\",\"like_icon\":\"Post_like_icon__Wd5qN\",\"icon\":\"Post_icon__V7wCf\",\"num_like\":\"Post_num_like__ellVg\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport { AiOutlineHeart } from \"react-icons/ai\";\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={ s.item }>\r\n      <img src='https://cdn.flamp.ru/b497df0c38f9d53c49e5c10665326e9c_1920.jpg' alt=\"ava\" />\r\n        <div>\r\n          <div>\r\n            <div className={s.name_user}>{props.name}</div>\r\n            <div>{props.message}</div>\r\n          </div>\r\n          <div className={s.like_icon}>\r\n            <AiOutlineHeart className={s.icon} />\r\n            <div className={ s.num_like }>\r\n              {props.likeCount}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  textarea: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n});\r\n\r\n\r\n\r\nconst MyPost = React.memo((props) => {\r\n\r\n  // Делает проверку на входящие пропсы, и не позволяет КЛАССОВОЙ компоненте рендарится повторно без новых пропсов.\r\n  //Закоментил, потому что эту функцию теперь выполняет PureComponent (class MyPost extends PureComponent {})\r\n  //В функциональной компоненте эту функцию выполняет React.memo\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps !== this.props || nextState !== this.state;\r\n  // }\r\n\r\n\r\n\r\n  //Закоментил, потому что этим теперь занимается Formik, и он использует локальный state\r\n  // const newPostElement = React.createRef();\r\n\r\n  // const onAddPost = () => { \r\n  //   // const text = newPostElement.current.value;\r\n  //   props.addPost();\r\n  //   // props.updateTextPost('');  // Обнуляет строку ввода\r\n  // }\r\n\r\n  // const onPostChange = () => {\r\n  //   const text = newPostElement.current.value;\r\n  //   props.updatePostActionCreated(text);\r\n  // }\r\n  return (\r\n    <div>\r\n      {/* <div className={s.posts}>\r\n          My post\r\n          <div>\r\n            <textarea onChange={ onPostChange } value={props.newText } ref={ newPostElement } className={s.input_post} placeholder='your news...'></textarea>\r\n          </div>\r\n          <div>\r\n            <button onClick={ onAddPost }>Send</button>\r\n          </div>\r\n        </div> */}\r\n      <div className={s.posts}>\r\n        <PostForm addPost={props.addPost} onPostChange={props.updatePostActionCreated} />\r\n      </div>\r\n      {[...props.post].reverse().map(p => <Post name={p.name} key={p.id} message={p.message} likeCount={p.likeCount} />)}\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport const PostForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ textarea: \"\" }}\r\n      onSubmit={async (values) => {\r\n        props.onPostChange(values['textarea'])\r\n        props.addPost()\r\n      }}\r\n      validationSchema={SignupSchema}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form>\r\n\r\n          <div className={errors.textarea && touched.textarea ? s.errors : null}>\r\n            <Field placeholder='your news...' name='textarea' type='textarea' />\r\n          </div>\r\n\r\n          {errors.textarea && touched.textarea ? (\r\n            <div className={s.errors}>\r\n              {errors.textarea}\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <button type=\"submit\">Send</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default MyPost","import { connect } from 'react-redux';\r\nimport { addPostActionCreated, updatePostActionCreated } from '../../../reducer/profile-reduser.js';\r\nimport MyPost from './MyPost';\r\n\r\n\r\n// const MyPostContainer = (props) => {\r\n\r\n//   let store = props.store.getState()\r\n\r\n//   const addPost = () => { \r\n//     // const text = newPostElement.current.value;\r\n//     props.store.dispatch(addPostActionCreated());\r\n//     // props.updateTextPost('');  // Обнуляет строку ввода\r\n//   }\r\n\r\n//   const onPostChange = (text) => {\r\n//     let action = updatePostActionCreated(text);\r\n//     props.store.dispatch(action)\r\n//   }\r\n\r\n//   return (\r\n//     <MyPost updatePostActionCreated={onPostChange} addPost={addPost} post={store.ProfilePage.post} newText={store.ProfilePage.newPostText} />\r\n//   )\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: state.ProfilePage.post,\r\n    newText: state.ProfilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updatePostActionCreated: (text) => {\r\n      let action = updatePostActionCreated(text);\r\n      dispatch(action)\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreated());\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\nexport default MyPostContainer","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\n\r\n\r\nconst Profile = ({profile, store, status, updateUserStatus}) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={profile} status={status} updateUserStatus={updateUserStatus} />\r\n      <MyPostContainer store={store} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { profileUser, getStatus, updateUserStatus } from '../../reducer/profile-reduser.js';\r\nimport { useParams } from 'react-router-dom';\r\nimport withAuthRedirectComponent from '../../hoc/withAuthRedirectComponent.jsx';\r\nimport { compose } from 'redux';\r\n\r\n\r\nexport function withRouter(Child){\r\n  return(props)=>{\r\n\r\n     const match  = {params: useParams()};\r\n     return <Child {...props}  match = {match}/>\r\n }\r\n}\r\n\r\n\r\nclass ProfileComponent extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    \r\n    this.props.profileUser(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus} />\r\n    )\r\n  }\r\n}\r\n//сделал HOC компонет который оборачивает компонент и редиректит его\r\n//этот код не нужен, так как теперь оборачивает compose\r\n// let AuthRedirectComponent = withAuthRedirectComponent(ProfileComponent)\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // profile: state.ProfilePage.profile\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\n\r\n// const TakeParams = (props) => {\r\n//   return <ProfileComponent {...props} param={useParams} />\r\n// }\r\n\r\n\r\n\r\nexport default compose (\r\n  withAuthRedirectComponent,\r\n  connect(mapStateToProps, {profileUser, getStatus, updateUserStatus}),\r\n  withRouter\r\n) (ProfileComponent) \r\n//compose оборачивает попорядку компоненты 1.ProfileComponent, 2.connect(mapStateToProps, {profileUser}),3.withAuthRedirectComponent\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n//вытащил из sate состояние аутентификации(залогинен или нет пользователь)\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n//компонент оборачивает другие компоненты и редиректит их\r\nexport const withAuthRedirectComponent = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    //компаненту для редиректа обернули еще раз, что бы она пришла уже с состоянием\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n      \r\n}\r\n\r\nexport default withAuthRedirectComponent\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","profile","className","s","src","alt","photos","large","ava","fullName","aboutMe","contacts","lookingForAJob","vk","facebook","instagram","website","twitter","youtube","github","mainLink","Preloader","name","message","likeCount","SignupSchema","Yup","shape","textarea","min","max","required","MyPost","React","PostForm","addPost","onPostChange","updatePostActionCreated","post","reverse","map","p","id","initialValues","onSubmit","values","validationSchema","errors","touched","placeholder","type","connect","state","ProfilePage","newText","newPostText","dispatch","text","action","addPostActionCreated","store","withRouter","Child","match","params","useParams","ProfileComponent","userId","this","authorizedUserId","profileUser","getStatus","compose","withAuthRedirectComponent","auth","isAuth","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}