{"version":3,"file":"static/js/905.ff2b1104.chunk.js","mappings":"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","sources":["webpack://soc_net/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://soc_net/./src/components/Dialogs/Messages/Messages.module.css?2673","components/Dialogs/Messages/Messages.jsx","components/Dialogs/DialogsItem/DialogItem.jsx","webpack://soc_net/./src/components/Dialogs/SendComponent/SendComponent.module.css?9b46","components/Dialogs/SendComponent/SendComponent.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirectComponent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__FwObC\",\"dialogsItems\":\"Dialogs_dialogsItems__+m8cT\",\"active\":\"Dialogs_active__-DU9x\",\"dialog\":\"Dialogs_dialog__xfMeR\",\"messages\":\"Dialogs_messages__pDMBW\",\"m\":\"Dialogs_m__UyUUE\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Messages_message__169-7\"};","import React from 'react';\r\nimport style from './Messages.module.css'\r\n\r\n\r\nconst MessagesUser = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            <div>\r\n                <img src='https://cdn.flamp.ru/b497df0c38f9d53c49e5c10665326e9c_1920.jpg' />\r\n            </div>\r\n            <div>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessagesUser;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={ s.dialog }>\r\n            <NavLink to={'/dialogs/' + props.id} className = { navData => navData.isActive ? s.active : s.dialog }>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"send\":\"SendComponent_send__ZDGRY\",\"errors\":\"SendComponent_errors__ZZHFg\"};","import React from 'react';\r\nimport style from './SendComponent.module.css';\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\n \r\n\r\n const SignupSchema = Yup.object().shape({\r\n  textarea: Yup.string()\r\n     .max(250, 'Too Long!')\r\n     .required('Required'),\r\n });\r\n\r\n\r\nconst SendComponent = (props) => {\r\n\r\n    return (\r\n        <div className={style.send}>\r\n            {/* <textarea onChange={ onMessageChange } value={ props.newMessage.new_message } ref={ newMessage } placeholder='Yours message...'></textarea>\r\n            <button onClick={ sendMessage }>Send</button> */}\r\n            <MessageForm sendMessage={props.sendMessage} onMessageChange={props.onMessageChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const MessageForm = (props) => {\r\n\r\n    return (\r\n        <Formik\r\n        initialValues={{ textarea: '' }}\r\n        onSubmit={async (values) => {\r\n          props.onMessageChange(values['textarea'])\r\n          props.sendMessage()\r\n        }}\r\n        validationSchema={SignupSchema}\r\n      >\r\n        {({ errors, touched }) => (\r\n        <Form>\r\n            {errors.textarea && touched.textarea ? (\r\n             <div className={style.errors}>{errors.textarea}</div>\r\n           ) : null}\r\n            <div className={errors.textarea && touched.textarea ? style.errors : null}>\r\n                <Field placeholder='Yours message...' name='textarea' type='textarea' />\r\n            </div>\r\n            \r\n            <div>\r\n                <button type=\"submit\">Send</button>\r\n            </div>\r\n        </Form>\r\n        )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default SendComponent;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport MessagesUser from './Messages/Messages.jsx';\r\nimport DialogItem from './DialogsItem/DialogItem.jsx';\r\nimport SendComponent from './SendComponent/SendComponent.jsx'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const sendMessages = props.MessagesPage.messages.map(m => <MessagesUser message={m.message} key={m.id} user={m.user} />)\r\n    const dialogElements = props.MessagesPage.users.map(u => <DialogItem id={u.id} key={u.id} name={u.name} />) //вынес map, но можно и внутри писать\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {sendMessages}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <SendComponent newMessage={props.MessagesPage} store={props.store} sendMessage={props.sendMessage} \r\n                onMessageChange={props.onMessageChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { sendMessageActionCreated, updateMessageActionCreated } from '../../reducer/dialogs-reduser.js';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirectComponent from '../../hoc/withAuthRedirectComponent.jsx';\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//     let store = props.store.getState()\r\n\r\n//     const sendMessage = () => {\r\n//         // const text = newPostElement.current.value;\r\n//         props.store.dispatch(sendMessageActionCreated());\r\n//         // props.updateTextPost('');  // Обнуляет строку ввода\r\n//     }\r\n\r\n//     const onMessageChange = (text) => {\r\n//         props.store.dispatch(updateMessageActionCreated(text));\r\n//     }\r\n\r\n//     return (\r\n//         <Dialogs MessagesPage={store.MessagesPage} sendMessage={sendMessage} onMessageChange={onMessageChange} />\r\n//     )\r\n// }\r\n\r\n\r\n//Используем react-redux\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        MessagesPage: state.MessagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageActionCreated());\r\n        },\r\n        onMessageChange: (text) => {\r\n            dispatch(updateMessageActionCreated(text));\r\n        }\r\n    }\r\n}\r\n//сделал HOC компонет который оборачивает компонент и редиректит его\r\n//этот код не нужен, так как теперь оборачивает compose\r\n// let AuthRedirectComponent = withAuthRedirectComponent(Dialogs)\r\n\r\n\r\n//connect позволяет передавать пропсы в компоненту\r\n//этот код не нужен, так как теперь оборачивает compose\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose (\r\n    withAuthRedirectComponent,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n) (Dialogs)","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n//вытащил из sate состояние аутентификации(залогинен или нет пользователь)\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n//компонент оборачивает другие компоненты и редиректит их\r\nexport const withAuthRedirectComponent = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    //компаненту для редиректа обернули еще раз, что бы она пришла уже с состоянием\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n      \r\n}\r\n\r\nexport default withAuthRedirectComponent\r\n\r\n"],"names":["props","className","style","src","message","s","to","id","navData","isActive","name","SignupSchema","Yup","shape","textarea","max","required","MessageForm","initialValues","onSubmit","values","onMessageChange","sendMessage","validationSchema","errors","touched","placeholder","type","sendMessages","MessagesPage","messages","map","m","Messages","user","dialogElements","users","u","newMessage","store","compose","withAuthRedirectComponent","connect","state","dispatch","sendMessageActionCreated","text","updateMessageActionCreated","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}